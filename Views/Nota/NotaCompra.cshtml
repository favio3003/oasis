
@{
    ViewBag.Title = "NotaCompra";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script>window.jQuery || document.write(decodeURIComponent('%3Cscript src="js/jquery.min.js"%3E%3C/script%3E'))</script>
<link rel="stylesheet" type="text/css" href="https://cdn3.devexpress.com/jslib/21.2.4/css/dx.common.css" />
<link rel="stylesheet" type="text/css" href="https://cdn3.devexpress.com/jslib/21.2.4/css/dx.light.css" />
<script src="https://cdn3.devexpress.com/jslib/21.2.4/js/dx.all.js"></script>
<script src="https://unpkg.com/devextreme-aspnet-data@2.8.2/js/dx.aspnet.data.js"></script>


<h2>NotaCompra</h2>
<div class="demo-container">
    <div class="tables" id="tables">
        <div class="column">
            <div id="grid1"></div>
        </div>
        <div class="column">
            <div id="grid2"></div>
        </div>
    </div>
</div>
<style>
    .tables {
        display: flex;
    }

    .column:first-child {
        width: 50%;
        padding-right: 15px;
    }

    .column:last-child {
        width: 50%;
        padding-left: 15px;
    }

</style>
<script>

    const url = 'https://js.devexpress.com/Demos/Mvc/api/DnDBetweenGrids';
    const priorities = [{
        id: 1, text: 'Low',
    }, {
        id: 2, text: 'Normal',
    }, {
        id: 3, text: 'High',
    }, {
        id: 4, text: 'Urgent',
    }];




    $(() => {
        const store = DevExpress.data.AspNet.createStore({
            key: 'ID',
            loadUrl: `${url}/Tasks`,
            updateUrl: `${url}/UpdateTask`,
            onBeforeSend(method, ajaxOptions) {
                ajaxOptions.xhrFields = { withCredentials: true };
            },
        });

        function getDataGridConfiguration(index) {
            return {
                height: 440,
                dataSource: {
                    store,
                    reshapeOnPush: true,
                },
                showBorders: true,
                filterValue: ['Status', '=', index],
                rowDragging: {
                    data: index,
                    group: 'tasksGroup',
                    onAdd,
                },
                scrolling: {
                    mode: 'virtual',
                },
                columns: [{
                    dataField: 'Subject',
                    dataType: 'string',
                }, {
                    dataField: 'Priority',
                    dataType: 'number',
                    width: 80,
                    lookup: {
                        dataSource: priorities,
                        valueExpr: 'id',
                        displayExpr: 'text',
                    },
                }, {
                    dataField: 'Status',
                    dataType: 'number',
                    visible: false,
                }],
            };
        }

        $('#grid1').dxDataGrid(getDataGridConfiguration(1));

        $('#grid2').dxDataGrid(getDataGridConfiguration(2));

        function onAdd(e) {
            const key = e.itemData.ID;
            const values = { Status: e.toData };

            store.update(key, values).then(() => {
                store.push([{
                    type: 'update', key, data: values,
                }]);
            });
        }
    });


</script>
